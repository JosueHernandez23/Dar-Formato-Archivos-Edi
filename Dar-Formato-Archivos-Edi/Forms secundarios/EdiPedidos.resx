<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>